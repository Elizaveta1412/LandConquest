<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YandexDiskNET</name>
    </assembly>
    <members>
        <member name="T:YandexDiskNET.ErrorResponse">
            <summary>
            Error response representation
            </summary>
        </member>
        <member name="P:YandexDiskNET.ErrorResponse.Message">
            <summary>
            Error message
            </summary>
        </member>
        <member name="P:YandexDiskNET.ErrorResponse.Description">
            <summary>
            Description error
            </summary>
        </member>
        <member name="P:YandexDiskNET.ErrorResponse.Error">
            <summary>
            Unique error code
            </summary>
        </member>
        <member name="M:YandexDiskNET.ErrorResponse.GetError(System.String)">
            <summary>
            Deserialization json data to ErrorResponse
            </summary>
            <param name="content">String json</param>
            <returns>Structure ErrorResponse</returns>
        </member>
        <member name="T:YandexDiskNET.DiskInfo">
            <summary>
            Meta information about disk 
            </summary>    
        </member>
        <member name="P:YandexDiskNET.DiskInfo.Max_file_size">
            <summary>
            Maximum file size.
            </summary>
        </member>
        <member name="P:YandexDiskNET.DiskInfo.Unlimited_autoupload_enabled">
            <summary>
            Unlimited auto upload with mobile devices.
            </summary>
        </member>
        <member name="P:YandexDiskNET.DiskInfo.Total_space">
            <summary>
            Total size of disk (bytes)
            </summary>
        </member>
        <member name="P:YandexDiskNET.DiskInfo.Trash_size">
            <summary>
            Total size files in trash (bytes). Included in used space.
            </summary>
        </member>
        <member name="P:YandexDiskNET.DiskInfo.Is_paid">
            <summary>
            Mark of  paid advanced place
            </summary>
        </member>
        <member name="P:YandexDiskNET.DiskInfo.Used_space">
            <summary>
            Used space of disk (bytes)
            </summary>
        </member>
        <member name="P:YandexDiskNET.DiskInfo.System_folders">
            <summary>
            List system folders
            </summary>
        </member>
        <member name="P:YandexDiskNET.DiskInfo.User">
            <summary>
            Disk  owner
            </summary>
        </member>
        <member name="P:YandexDiskNET.DiskInfo.Revision">
            <summary>
            Current disk revision
            </summary>
        </member>
        <member name="P:YandexDiskNET.DiskInfo.ErrorResponse">
            <summary>
            Error response representation
            </summary>
        </member>
        <member name="M:YandexDiskNET.DiskInfo.GetDiskInfo(System.String)">
            <summary>
            Deserialization json data to DiskInfo
            </summary>
            <param name="content">String json for deserialization</param>
            <returns>Structure DiskInfo</returns>
        </member>
        <member name="T:YandexDiskNET.System_folders">
            <summary>
            System folders of disk
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Odnoklassniki">
            <summary>
            Path to folder "Social net/Odnoklassniki".
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Google">
             <summary>
            Path to folder "Social net/Google+".
             </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Instagram">
            <summary>
            Path to folder "Social net/Instagram".
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Vkontakte">
            <summary>
            Path to folder "Social net/Vkontakte".
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Mailru">
            <summary>
            Path to folder "Social net/My world".
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Downloads">
            <summary>
            Path to folder "Downloads".
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Applications">
            <summary>
            Path to folder "Applications".
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Facebook">
            <summary>
            Path to folder "Social net/Facebook".
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Social">
            <summary>
            Path to folder "Social net".
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Screenshots">
            <summary>
            Path to folder "Screenshots".
            </summary>
        </member>
        <member name="P:YandexDiskNET.System_folders.Photostream">
            <summary>
            Path to folder "Photo".
            </summary>
        </member>
        <member name="T:YandexDiskNET.User">
            <summary>
            Disk owner data
            </summary>
        </member>
        <member name="P:YandexDiskNET.User.Login">
            <summary>
            Login
            </summary>
        </member>
        <member name="P:YandexDiskNET.User.Uid">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:YandexDiskNET.ResInfo">
            <summary>
            Meta information about file or folder
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Antivirus_status">
            <summary>
            Status antivirus check
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Public_key">
            <summary>
            Key public resource
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Sha256">
            <summary>
            SHA256-hash
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo._Embedded">
            <summary>
            List nested resources
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Name">
            <summary>
            Name resource
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Exif">
            <summary>
            Meta information of media file
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Resource_id">
            <summary>
            Resource id
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Custom_properties">
            <summary>
            User attributes of resource
            </summary>       
        </member>
        <member name="P:YandexDiskNET.ResInfo.Public_url">
            <summary>
            Public URL
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.ShareInfo">
            <summary>
            Information about shared folder
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Modified">
            <summary>
            Date of change
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Created">
            <summary>
            Date of create
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.CommentIds">
            <summary>
            Id comments
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Md5">
            <summary>
            MD5 - hash
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Size">
            <summary>
            File size
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Media_type">
            <summary>
            Disk-Specific File Type
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Path">
            <summary>
            Path to resource
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Preview">
            <summary>
            URL preview file
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Type">
            <summary>
            Type resource
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Mime_type">
            <summary>
            MIME - type file
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.Revision">
            <summary>
            Disk audit in which this resource was last modified
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfo.ErrorResponse">
            <summary>
            Error response representation
            </summary>
        </member>
        <member name="M:YandexDiskNET.ResInfo.GetResInfo(System.String,System.Boolean)">
            <summary>
            Create meta information about a file or directory
            </summary>
            <param name="content">Json string</param>
            <param name="onlyFiles">Request only for files</param>
            <returns></returns>
        </member>
        <member name="T:YandexDiskNET.ResInfoList">
            <summary>
            List of nested resources
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfoList.Sort">
            <summary>
            The field by which the list is sorted
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfoList.Items">
            <summary>
            List items
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfoList.Limit">
            <summary>
            Number of items per page
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfoList.Offset">
            <summary>
            Offset from the top of the list
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfoList.Path">
            <summary>
            The path to the resource for which the list is built
            </summary>
        </member>
        <member name="P:YandexDiskNET.ResInfoList.Total">
            <summary>
            Total number of items in the list
            </summary>
        </member>
        <member name="T:YandexDiskNET.Exif">
            <summary>
            Media file metadata
            </summary>
        </member>
        <member name="P:YandexDiskNET.Exif.Date_time">
            <summary>
            Date of filming.
            </summary>
        </member>
        <member name="T:YandexDiskNET.ShareInfo">
            <summary>
            Shared folder information
            </summary>
        </member>
        <member name="P:YandexDiskNET.ShareInfo.Is_root">
            <summary>
            A sign that the folder is the root of the group
            </summary>
        </member>
        <member name="P:YandexDiskNET.ShareInfo.Is_owned">
            <summary>
            A sign that the current user is the owner of the public folder
            </summary>
        </member>
        <member name="P:YandexDiskNET.ShareInfo.Rights">
            <summary>
            Access rights
            </summary>
        </member>
        <member name="T:YandexDiskNET.CommentIds">
            <summary>
            Comment IDs
            </summary>
        </member>
        <member name="P:YandexDiskNET.CommentIds.Private_resource">
            <summary>
            The comment ID for private resources.
            </summary>
        </member>
        <member name="P:YandexDiskNET.CommentIds.Public_resource">
            <summary>
            The identifier of comments for public resources.
            </summary>
        </member>
        <member name="T:YandexDiskNET.Custom_properties">
            <summary>
            Custom property attributes
            </summary>
        </member>
        <member name="T:YandexDiskNET.Link">
            <summary>
            Server response
            </summary>
        </member>
        <member name="P:YandexDiskNET.Link.Href">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:YandexDiskNET.Link.Method">
            <summary>
            HTTP-metod
            </summary>
        </member>
        <member name="P:YandexDiskNET.Link.Templated">
            <summary>
            Symptom of a template URL
            </summary>
        </member>
        <member name="T:YandexDiskNET.Param">
            <summary>
            Request parameters
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Fields">
            <summary>
            List returned fields.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Path">
            <summary>
            Path to resource.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.From">
            <summary>
            The path of the resource for copy.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Limit">
            <summary>
            The number of displayed nested resources, by default 20
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Force_async">
            <summary>
            Run asynchronously.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Permanently">
            <summary>
            Delete the resource without placing it in the Trash.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Offset">
            <summary>
            Offset from the beginning of the list of nested resources.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Preview_crop">
            <summary>
            Allow trimming the preview.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Preview_size">
            <summary>
            The size of the preview.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Sort">
            <summary>
            A field for sorting the nested resources.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Link">
            <summary>
            Link
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Overwrite">
            <summary>
            Overwrite an existing resource.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Media_type">
            <summary>
            Filter by media type.
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Type">
            <summary>
            Resource type file or folder
            </summary>
        </member>
        <member name="P:YandexDiskNET.Param.Restore_name">
            <summary>
            The name under which the resource will be restored.
            </summary>
        </member>
        <member name="T:YandexDiskNET.UrlBuilder">
            <summary>
            Build parameters for request
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Fields">
            <summary>
            List of returned attributes.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Path">
            <summary>
            The path to the resource.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.From">
            <summary>
            The path to the resource being copied.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Limit">
            <summary>
            The number of displayed nested resources, by default 20
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Force_async">
            <summary>
            Run asynchronously.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Permanently">
            <summary>
            Delete the resource without placing it in the Trash.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Offset">
            <summary>
            Offset from the beginning of the list of nested resources.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Preview_crop">
            <summary>
            Allow trimming the preview.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Preview_size">
            <summary>
            The size of the preview.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Sort">
            <summary>
            A field for sorting the nested resources.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Link">
            <summary>
            Link
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Overwrite">
            <summary>
            Overwrite an existing resource.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Media_type">
            <summary>
            Filter by media type.
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Type">
            <summary>
            Type resource file or folder
            </summary>
        </member>
        <member name="P:YandexDiskNET.UrlBuilder.Name">
            <summary>
            The name under which the resource will be restored.
            </summary>
        </member>
        <member name="M:YandexDiskNET.UrlBuilder.#ctor(YandexDiskNET.Param)">
            <summary>
            Build parameters of request in string url 
            </summary>
            <param name="param"></param>
        </member>
        <member name="T:YandexDiskNET.DiskFields">
            <summary>
            List fields of DiskInfo
            </summary>
        </member>
        <member name="F:YandexDiskNET.DiskFields.Max_file_size">
            <summary>
            Maximum file size.
            </summary>
        </member>
        <member name="F:YandexDiskNET.DiskFields.Unlimited_autoupload_enabled">
            <summary>
            Unlimited auto upload with mobile devices.
            </summary>
        </member>
        <member name="F:YandexDiskNET.DiskFields.Total_space">
            <summary>
            Total size of disk (bytes)
            </summary>
        </member>
        <member name="F:YandexDiskNET.DiskFields.Trash_size">
            <summary>
            Total size files in trash (bytes). Included in used space.
            </summary>
        </member>
        <member name="F:YandexDiskNET.DiskFields.Is_paid">
            <summary>
            Mark of  paid advanced place
            </summary>
        </member>
        <member name="F:YandexDiskNET.DiskFields.Used_space">
            <summary>
            Used space of disk (bytes)
            </summary>
        </member>
        <member name="F:YandexDiskNET.DiskFields.System_folders">
            <summary>
            List system folders
            </summary>
        </member>
        <member name="F:YandexDiskNET.DiskFields.User">
            <summary>
            Disk  owner
            </summary>
        </member>
        <member name="T:YandexDiskNET.Media_type">
            <summary>
            The type of files to include in the list. The disk determines the type of each file at boot time.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Audio">
            <summary>
            Audio files.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Backup">
            <summary>
            Backup and temporary backup files.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Book">
            <summary>
            E-books.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Compressed">
            <summary>
            Compressed and archived files.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Data">
            <summary>
            Files with databases.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Development">
            <summary>
            Files with code (C ++, Java, XML, etc.), as well as service IDE files.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Diskimage">
            <summary>
            Images of media in various formats and related files (for example, CUE).
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Document">
            <summary>
            Documents of office formats (Word, OpenOffice, etc.).
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Encoded">
            <summary>
            Encrypted files.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Executable">
            <summary>
            Executable files.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Flash">
            <summary>
            Files with flash video or animation.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Font">
            <summary>
            Font files.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Image">
            <summary>
            Images.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Settings">
            <summary>
            Settings files for various programs.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Spreadsheet">
            <summary>
            Office files (Numbers, Lotus).
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Text">
            <summary>
            Text files.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Video">
            <summary>
            Video files.
            </summary>
        </member>
        <member name="F:YandexDiskNET.Media_type.Web">
            <summary>
            Various files used by browsers and sites (CSS, certificates, bookmark files).
            </summary>
        </member>
        <member name="T:YandexDiskNET.SortField">
            <summary>
            The field by which the list of resources nested in the folder is sorted.
            </summary>
        </member>
        <member name="F:YandexDiskNET.SortField.Name">
            <summary>
            The name of the resource.
            </summary>
        </member>
        <member name="F:YandexDiskNET.SortField.Path">
            <summary>
            The path to the resource in Drive.
            </summary>
        </member>
        <member name="F:YandexDiskNET.SortField.Created">
            <summary>
            The date the resource was created.
            </summary>
        </member>
        <member name="F:YandexDiskNET.SortField.Modified">
            <summary>
            The date the resource was modified.
            </summary>
        </member>
        <member name="F:YandexDiskNET.SortField.Size">
            <summary>
            File size.
            </summary>
        </member>
        <member name="T:YandexDiskNET.SortDeleted">
            <summary>
            The field by which the list of resources in the trash is sorted.
            </summary>
        </member>
        <member name="F:YandexDiskNET.SortDeleted.Deleted">
            <summary>
            The date the resource was deleted.
            </summary>
        </member>
        <member name="F:YandexDiskNET.SortDeleted.Created">
            <summary>
            The date the resource was created.
            </summary>
        </member>
        <member name="T:YandexDiskNET.ResFields">
            <summary>
            List of fields in a file or folder
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Antivirus_status">
            <summary>
            Antivirus check status
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Public_key">
            <summary>
            The key of the published resource
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Sha256">
            <summary>
            SHA256-hash
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Public_url">
            <summary>
            Public URL
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Modified">
            <summary>
            Date of change
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Created">
            <summary>
            Date of creation
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Md5">
            <summary>
            MD5-hash
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Size">
            <summary>
            File size
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Media_type">
            <summary>
            Disk-Specific File Type
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Path">
            <summary>
            The path to the resource
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Preview">
            <summary>
            File preview URL
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Type">
            <summary>
            Type file or folder
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields.Mime_type">
            <summary>
            MIME-file type
            </summary>
        </member>
        <member name="F:YandexDiskNET.ResFields._Embedded">
            <summary>
            List of nested ResInfoList resources
            </summary>
        </member>
        <member name="T:YandexDiskNET.TypeRes">
            <summary>
            Resource type
            </summary>
        </member>
        <member name="F:YandexDiskNET.TypeRes.File">
            <summary>
            File
            </summary>
        </member>
        <member name="F:YandexDiskNET.TypeRes.Dir">
            <summary>
            Folder
            </summary>
        </member>
        <member name="T:YandexDiskNET.StatusAsync">
            <summary>
            The status of an asynchronous operation
            </summary>  
        </member>
        <member name="F:YandexDiskNET.StatusAsync.Success">
            <summary>
            The completion status of the asynchronous operation 'completed successfully'
            </summary>
        </member>
        <member name="F:YandexDiskNET.StatusAsync.InProgress">
            <summary>
            The execution status of the asynchronous operation 'in progress'
            </summary>
        </member>
        <member name="F:YandexDiskNET.StatusAsync.Failed">
            <summary>
            The completion status of the asynchronous operation 'completed with an error'
            </summary>
        </member>
        <member name="T:YandexDiskNET.YandexDiskRest">
            <summary>
            Implementation REST API Yandex Disk for .Net
            </summary>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.#ctor(System.String)">
            <summary>
            Initialize API Disk
            </summary>
            <param name="oauth">OAuth token</param>
        </member>
        <member name="P:YandexDiskNET.YandexDiskRest.Oauth">
            <summary>
             Authorization token
            </summary>
        </member>
        <member name="T:YandexDiskNET.YandexDiskRest.YandexDiskAsk">
            <summary>
            Yandex Disk query
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Asynchronous_operation">
            <summary>
            Asynchronous operation
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Get_meta_information_about_disk_user">
            <summary>
            Get meta information about disk 
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Get_meta_information_about_file_or_folder">
            <summary>
            Get meta information about file or folder
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Get_list_files_order_by_name">
            <summary>
            Get list all files order by name
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Get_list_files_order_by_download_date">
            <summary>
            Get list all files order by date download
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Get_list_public_resources">
            <summary>
            Get list all public resources
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Create_folder">
            <summary>
            Create folder
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Remove_file_or_folder">
            <summary>
            Delete file or folder 
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Copy_file_or_folder">
            <summary>
            Copy file or folder
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Move_file_or_folder">
            <summary>
            Move file or folder
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Public_resource_on">
            <summary>
            On resource as public
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Public_resource_off">
            <summary>
            Off resource as public
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Get_link_downloadable_file">
            <summary>
            Get link for download file with disk
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Get_link_uploadable_file">
            <summary>
            Get link for upload file on disk
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Clear_trash">
            <summary>
            Clear Trash
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Get_trash_content">
            <summary>
            Get Trash resources
            </summary>
        </member>
        <member name="F:YandexDiskNET.YandexDiskRest.YandexDiskAsk.Recover_resource_from_trash">
            <summary>
            Recover resource from Trash
            </summary>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.GetAsyncStatus(System.String)">
            <summary>
            Get the status of an asynchronous operation
            </summary>
            <param name="link">Url asynchronous operation</param>
            <returns>The status of an asynchronous operation</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.AwaitAsyncComplete(System.String)">
            <summary>
            Await asynchronous operation complete 
            </summary>
            <param name="content">String json for deserialization</param>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.CommandDisk(System.String,YandexDiskNET.YandexDiskRest.YandexDiskAsk,YandexDiskNET.Param)">
            <summary>
            Send request to Yandex disk and return json string response or null if failure
            </summary>
            <param name="oauth">String  authorization token</param>
            <param name="diskAsk">Request to Yandex disk</param>        
            <param name="param">Ask parameters</param>
            <returns>Json string response or string empty if failure</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.GetDiskInfo(YandexDiskNET.DiskFields[])">
            <summary>
            Get meta information about disk, by default return all fields     
            </summary>
            <param name="fields">Array returned fields . Example use 'new DiskFields[] {DiskFields.Used_space, DiskFields.Unlimited_autoupload_enabled, DiskFields.System_folders}'</param>
            <returns>DiskInfo structure</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.GetResInfo(System.Nullable{System.Int32},System.String,System.Nullable{YandexDiskNET.SortField},YandexDiskNET.ResFields[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get meta information about file or folder, dy default get meta information root disk
            </summary>    
            <param name="limit">Maximum number of output resources, default 20</param>
            <param name="path">Path to resource. Required value in Url - format. Example 'old/new/good.txt'</param>
            <param name="sort">A field for sorting the nested resources. The example 'SortField.Created' is sorted by the date of creation of the resource</param>
            <param name="fields">An array of return fields. Example 'new ResFields [] {ResFields.Name, ResFields.Type, ResFields.Size}'</param>
            <param name="offset">Offset from the beginning of the list of nested resources.</param>
            <param name="preview_crop">Allow trimming the preview.</param>
            <param name="preview_size">The size of the preview. Example "120x240"</param>
            <returns>The return value of the ResInfo structure</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.GetResourceByName(System.Nullable{System.Int32},YandexDiskNET.Media_type[],System.Nullable{YandexDiskNET.SortField},YandexDiskNET.ResFields[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get a list of files ordered by name (structure ResInfo._Embedded), a flat list of all files in the Drive in alphabetical order.
            </summary> 
            <param name="limit">Maximum number of output resources, default 20</param>
            <param name="media_type">An array of file types to include in the list. Example 'new Media_type [] {Media_type.Unknown, Media_type.Text}'</param>
            <param name="sort">A field for sorting the nested resources. Example 'SortField.Size' sort by file size</param>
            <param name="fields">An array of return fields. Example 'new ResFields [] {ResFields.Name, ResFields.Type, ResFields.Size}'</param>
            <param name="offset">Offset from the beginning of the list of nested resources.</param>
            <param name="preview_crop">Allow trimming the preview.</param>
            <param name="preview_size">The size of the preview. Example "120x240"</param>
            <returns>The return value of the ResInfo._Embedded structure</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.GetResourceByDate(System.Nullable{System.Int32},YandexDiskNET.Media_type[],YandexDiskNET.ResFields[],System.Nullable{System.Boolean},System.String)">
            <summary>
            Get a list of files ordered by the download date (structure ResInfo._Embedded), a flat list of all the files in the Drive.
            </summary>  
            <param name="limit">Maximum number of output resources, default 20</param>   
            <param name="media_type">An array of file types to include in the list. Example 'new Media_type [] {Media_type.Unknown, Media_type.Text}'</param>
            <param name="fields">An array of return fields. Example 'new ResFields [] {ResFields.Name, ResFields.Type, ResFields.Size}'</param>        
            <param name="preview_crop">Allow trimming the preview.</param>
            <param name="preview_size">The size of the preview. Example "120x240"</param>
            <returns>The return value of the ResInfo._Embedded structure</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.GetResourcePublic(System.Nullable{System.Int32},System.Nullable{YandexDiskNET.TypeRes},YandexDiskNET.ResFields[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get the list of published resources (structure ResInfo._Embedded), a flat list of all the list of published resources in the User's disk.
            </summary>   
            <param name="limit">Maximum number of output resources, default 20</param>        
            <param name="type">The type of resource to include in the list. Example 'TypeRes.Dir', folders only</param>
            <param name="fields">An array of return fields. Example 'new ResFields [] {ResFields.Name, ResFields.Type, ResFields.Size}'</param>
            <param name="offset">Offset from the beginning of the list of nested resources.</param>
            <param name="preview_crop">Allow trimming the preview.</param>
            <param name="preview_size">The size of the preview. Example "120x240"</param>
            <returns>The return value of the ResInfo._Embedded structure</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.CreateFolder(System.String)">
            <summary>
            Create folder
            </summary>
            <param name="path">The path to the created folder. The path in the parameter value should be encoded in the URL format. Example 'old/new'</param>       
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.DeleteResource(System.String,System.Boolean)">
            <summary>
            Delete the file or folder. By default, it will delete the resource in the Recycle Bin. To remove the resource without placing it in the Recycle Bin, specify the recycle = false parameter.
            </summary>
            <param name="path">The path to the file or folder. The path in the parameter value should be encoded in the URL format. Example 'old/test.txt'</param>       
            <param name="recycle">Remove resource to Recycle bin. Default is true</param>
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.CopyResource(System.String,System.String,System.Boolean)">
            <summary>
            Create a copy of a file or folder
            </summary>
            <param name="from">The path to the resource being copied. The path in the parameter value should be encoded in the URL format. Example 'old/test.txt'</param>
            <param name="path">The path to the resource being created. The path in the parameter value should be encoded in the URL format. Example 'old/new'</param>
            <param name="overwrite">Overwrite an existing resource.</param>
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.MoveResource(System.String,System.String,System.Boolean)">
            <summary>
            Move file or folder
            </summary>
            <param name="from">The path to the roaming resource. The path in the parameter value should be encoded in the URL format. Example 'old/test.txt'</param>
            <param name="path">The path to the resource being created. The path in the parameter value should be encoded in the URL format. Example 'old/new'</param>
            <param name="overwrite">Overwrite an existing resource.</param>
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.PublicResource(System.String)">
            <summary>
            Publish this resource
            </summary>
            <param name="path">The path to the public resource. The path in the parameter value should be encoded in the URL format. Example 'old/test.txt'</param>        
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.UnpublicResource(System.String)">
            <summary>
            Unpublish the resource
            </summary>
            <param name="path">The path to the public resource. The path in the parameter value should be encoded in the URL format. Example 'old/test.txt'</param>        
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.ClearRecycle(System.String)">
            <summary>
            Clear the Recycle Bin. By default, clear all the entire Trash.
            </summary>
            <param name="path">The path to the resource in the Recycle Bin. The path in the parameter value should be encoded in the URL format. Example 'old/test.txt'</param>
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.GetRecycleInfo(System.Nullable{System.Int32},System.String,System.Nullable{YandexDiskNET.SortDeleted},YandexDiskNET.ResFields[],System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String)">
            <summary>
            Get the contents of the Recycle Bin (ResInfo structure), by default display all the information.
            </summary>  
            <param name="limit">Maximum number of output resources, default 20</param>
            <param name="path">Path to the resource. Path in the parameter value should be encoded in the URL format. Example 'old/new/good.txt'</param>
            <param name="sort">A field for sorting the nested resources. Example 'SortDeleted.Deleted' sort by date of deletion of the resource</param>
            <param name="fields">An array of return fields. Example 'new ResFields [] {ResFields.Name, ResFields.Type, ResFields.Size}'</param>
            <param name="offset">Offset from the beginning of the list of nested resources.</param>
            <param name="preview_crop">Allow trimming the preview.</param>
            <param name="preview_size">The size of the preview. Example "120x240"</param>
            <returns>The return value of the ResInfo structure</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.RestoreResource(System.String,System.String,System.Boolean)">
            <summary>
            Restore resource from Trash
            </summary>        
            <param name="path">The path to the resource in the Recycle Bin. Path in the parameter value should be encoded in the URL format. Example 'old/new/good.txt'</param>
            <param name="name">The name under which the resource will be restored. Default does not change. Path in the parameter value should be encoded in the URL format. Example 'old/new'</param>
            <param name="overwrite">Overwrite an existing resource.</param>
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.DownloadResource(System.String,System.String)">
            <summary>
            Download file or folder from Disk, if is folder is downloaded to zip archive 
            </summary>        
            <param name="sourceFileName">The path to the resource in the Disk. Path in the parameter value should be encoded in the URL format. Example 'old/new/good.txt'</param>
            <param name="destFileName">Destination file name</param>       
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.DownloadResourceAcync(System.String,System.String,System.IProgress{System.Double})">
            <summary>
            Download file or folder from Disk as asynchronous, if is folder is downloaded to zip archive 
            </summary>        
            <param name="sourceFileName">The path to the resource in the Disk. Path in the parameter value should be encoded in the URL format. Example 'old/new/good.txt'</param>
            <param name="destFileName">Destination file name</param> 
            <param name="progress">Function for display progress download</param>
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.UploadResource(System.String,System.String,System.Boolean)">
            <summary>
            Upload file to Disk
            </summary>
            <param name="destFileName">The path to the resource in the Disk. Path in the parameter value should be encoded in the URL format. Example 'old/new/good.txt'</param>
            <param name="sourceFileName">Path to file on local computer.</param>
            <param name="overwrite">Overwrite existing file.</param> 
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskRest.UploadResourceAsync(System.String,System.String,System.Boolean,System.IProgress{System.Double})">
            <summary>
            Upload file to Disk as asynchronous
            </summary>
            <param name="destFileName">The path to the resource in the Disk. Path in the parameter value should be encoded in the URL format. Example 'old/new/good.txt'</param>
            <param name="sourceFileName">Path to file on local computer.</param>
            <param name="overwrite">Overwrite existing file.</param>  
            <param name="progress">Function for display progress download</param>
            <returns>The return value of the ErrorResponse structure with null values if successful, else error message</returns>
        </member>
        <member name="T:YandexDiskNET.YandexDiskUtils">
            <summary>
            Utils for YandexDiskNET
            </summary>
        </member>
        <member name="M:YandexDiskNET.YandexDiskUtils.DownloadFileAsync(System.String,System.String,System.IProgress{System.Double})">
            <summary>
            Download file from target url
            </summary>
            <param name="url">URL for download</param>
            <param name="destFileName">Destination file name</param>
            <param name="progress">Function for display progress download</param>
            <returns>Destination file nanme or null if failure</returns>
        </member>
        <member name="M:YandexDiskNET.YandexDiskUtils.UploadFileAsync(System.String,System.String,System.IProgress{System.Double})">
            <summary>
            Upload file from target path
            </summary>
            <param name="url">URL for upload</param>
            <param name="sourceFileName">Target file name for upload</param>
            <param name="progress">Function for display progress upload</param>
            <returns>True if upload complete successful</returns>
        </member>
    </members>
</doc>
